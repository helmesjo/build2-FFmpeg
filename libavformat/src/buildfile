using autoconf

intf_libs = # Interface dependencies.
impl_libs = # Implementation dependencies.

import config = libconfig%lib{config}
impl_libs += $config
import intf_libs += \
  libavutil%lib{avutil} \
  libavcodec%lib{avcodec} \
  libswscale%lib{swscale} \
  libswresample%lib{swresample}

cpu = [string] $c.target.cpu
tgt_win32 = [bool] ($c.target.system == 'win32-msvc')
tgt_macos = [bool] ($c.target.system == 'darwin')

lib{avformat}: libul{avformat}: \
              libavformat/h{**} \
              $impl_libs $intf_libs

conditional_src  = $json.load($src_base/files.json)

# conditional source & assembly
import [once] libconfig%buildfile{conditional-src}
import [once] libconfig%buildfile{symbol-importation}
libul{avformat}: impl_target{symbol-importation}: libavformat/h{**}
libua{avformat}: libavformat/impl_target{conditional-asm-obja}: libavformat/asm{**}
libus{avformat}: libavformat/impl_target{conditional-asm-objs}: libavformat/asm{**}
libul{avformat}: libavformat/impl_target{conditional-src}: libavformat/c{**}
libul{avformat}: libavformat/c{ \
                  protocol_list \
                  demuxer_list \
                  muxer_list \
                }: include = adhoc

libavformat/c{protocol_list}: libavformat/c{protocols} file{enabled_groups}
{{
  diag generate ($>)

  s = $path($<[0])     # Source file.
  f = $path($>)        # Target file.
  cat $path($<[1]) | set -w enabled_groups [string_set]
  pattern = "URLProtocol"
  thing = "parser"
  struct_name = "URLProtocol"
  name = "url_protocols"

  sed -n -e "s/^[^#]*extern.*$pattern *ff_\([^ ]*\)_$thing;/\1_$thing/p" $s | set -n format_LIST

  echo "static const $struct_name * const $name[] = {" > $f
  for c: $format_LIST
    group = $string.ucase(CONFIG_$c)
    if ($enabled_groups[$group])
      echo "    &ff_$c," >> $path($>)
    end
  end
  echo "    NULL };" >> $path($>)
}}

libavformat/c{demuxer_list}: libavformat/c{allformats} file{enabled_groups}
{{
  diag generate ($>)

  s = $path($<[0])     # Source file.
  f = $path($>)        # Target file.
  cat $path($<[1]) | set -w enabled_groups [string_set]
  pattern = "FFInputFormat"
  thing = "demuxer"
  struct_name = "FFInputFormat"
  name = "demuxer_list"

  sed -n -e "s/^[^#]*extern.*$pattern *ff_\([^ ]*\)_$thing;/\1_$thing/p" $s | set -n format_LIST

  echo "static const $struct_name * const $name[] = {" > $f
  for c: $format_LIST
    group = $string.ucase(CONFIG_$c)
    if ($enabled_groups[$group])
      echo "    &ff_$c," >> $path($>)
    end
  end
  echo "    NULL };" >> $path($>)
}}

libavformat/c{muxer_list}: libavformat/c{allformats} file{enabled_groups}
{{
  diag generate ($>)

  s = $path($<[0])     # Source file.
  f = $path($>)        # Target file.
  cat $path($<[1]) | set -w enabled_groups [string_set]
  pattern = "FFOutputFormat"
  thing = "parser"
  struct_name = "FFOutputFormat"
  name = "muxer_list"

  sed -n -e "s/^[^#]*extern.*$pattern *ff_\([^ ]*\)_$thing;/\1_$thing/p" $s | set -n format_LIST

  echo "static const $struct_name * const $name[] = {" > $f
  for c: $format_LIST
    group = $string.ucase(CONFIG_$c)
    if ($enabled_groups[$group])
      echo "    &ff_$c," >> $path($>)
    end
  end
  echo "    NULL };" >> $path($>)
}}

# Build options.
#
import [once] libconfig%buildfile{common-configs}

out_pfx = [dir_path] $out_root/src/
src_pfx = [dir_path] $src_root/src/

c.poptions += "-I$out_pfx" "-I$src_pfx" -DBUILDING_avformat -Dav_export_libavformat=

# System libraries
sys_libs =
switch $c.target.class, $c.target.system
{
  case 'windows', 'win32-msvc'
    sys_libs += bcrypt.lib
  case 'windows', 'mingw32'
    sys_libs += -lbcrypt
}
c.libs += $sys_libs

switch ($c.id)
{
  case 'msvc'
  {
    c.coptions += -wd4003 -wd4018 -wd4146 -wd4244 -wd4305 -wd4554 -wd4133 -wd4333
    c.poptions += -DWIN32_LEAN_AND_MEAN -D_USE_MATH_DEFINES -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS
  }
}

libs{avformat}: def{avformat}: include = ($c.target.system == 'win32-msvc')
def{avformat}: libul{avformat}

if ($c.target.system == 'mingw32')
  c.loptions += -Wl,--export-all-symbols

# Export options.
#
lib{avformat}:
{
  c.export.poptions = "-I$out_pfx" "-I$src_pfx"
  c.export.libs = $intf_libs $sys_libs
}

if ($c.target.system == 'win32-msvc')
{
  liba{avformat}:
  {
    c.export.poptions += -Dav_export_libavformat=
  }
  libs{avformat}:
  {
    c.export.poptions += -Dav_export_libavformat=__declspec\(dllimport\)
  }
}
else
{
  lib{avformat}:
  {
    c.export.poptions += -Dav_export_libavformat=
  }
}

# For pre-releases use the complete version to make sure they cannot
# be used in place of another pre-release or the final version. See
# the version module for details on the version.* variable values.
#
if $version.pre_release
  lib{avformat}: bin.lib.version = "-$version.project_id"
else
  lib{avformat}: bin.lib.version = "-$version.major.$version.minor"

# Install recreating subdirectories.
#
h{*}:
{
  install         = include/
  install.subdirs = true
}
