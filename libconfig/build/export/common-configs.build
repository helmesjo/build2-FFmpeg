if (!$defined(libconfig))
  import! libconfig [metadata] = libconfig%lib{config}

switch $c.target.system
{
  case 'win32-msvc'
  {
    if(!$empty($c.coptions))
    {
      if(($string.find($c.coptions, "-Od") || $string.find($c.coptions, '/Od')) \
         && (!$find($c.coptions, '-Og') && !$find($c.coptions, '/Og')))
      {
        warn "/Od is not supported with MSVC, complementing with /Og"
        c.coptions += -Og
      }
    }
  }
}

switch $c.target.cpu $c.id.type
{
  case 'x86_64' 'msvc'
  {
    if (!$($libconfig: libconfig.disable_avx2))
      c.coptions += -arch:AVX2
    elif (!$($libconfig: libconfig.disable_sse3))
      c.coptions += -arch:SSE3
    elif (!$($libconfig: libconfig.disable_sse2))
      c.coptions += -arch:SSE2
    elif (!$($libconfig: libconfig.disable_sse))
      c.coptions += -arch:SSE
  }
  case 'x86_64' 'gcc'
  {
    if (!$(libconfig: libconfig.disable_fma4))
      c.coptions += -mfma4
    elif (!$(libconfig: libconfig.disable_fma3))
      c.coptions += -mfma3
    elif (!$(libconfig: libconfig.disable_avx2))
      c.coptions += -mavx2
    elif (!$(libconfig: libconfig.disable_sse2))
      c.coptions += -msse2
    elif (!$(libconfig: libconfig.disable_sse))
      c.coptions += -msse
    elif (!$(libconfig: libconfig.disable_mmx))
      c.coptions += -mmmx
  }
}

objs{**}: c.poptions += -DCONFIG_PIC=1 \
                        -DPIC=1
obja{**}: c.poptions += -DCONFIG_PIC=0

# see upstream ./configure
switch $c.target.class
{
  case 'windows'
  {
    if ($ctarget.system == 'mingw32')
    {
      c.poptions += -U__STRICT_ANSI__ \
                    -D__USE_MINGW_ANSI_STDIO=1 \
                    -D_POSIX_C_SOURCE=200112 \
                    -D_XOPEN_SOURCE=600
    }
    c.poptions += -DWIN32_LEAN_AND_MEAN \
                  -D_CRT_NONSTDC_NO_WARNINGS \
                  -D_CRT_SECURE_NO_WARNINGS \
                  -D_USE_MATH_DEFINES
    c.coptions += -wd4018 \
                  -wd4133 \
                  -wd4146 \
                  -wd4244 \
                  -wd4305 \
                  -wd4333 \
                  -wd4554
    c.loptions += -LARGEADDRESSAWARE
  }
  default
  {
    cxx.poptions += -D__STDC_CONSTANT_MACROS
    c.poptions +=  -D_ISOC11_SOURCE \
                   -D_FILE_OFFSET_BITS=64 \
                   -D_LARGEFILE_SOURCE
    c.coptions += -Wall \
                  -Wdeclaration-after-statement \
                  -Wdisabled-optimization \
                  -Wempty-body \
                  -Werror=implicit-function-declaration \
                  -Werror=missing-prototypes \
                  -Werror=return-type \
                  -Wmissing-prototypes \
                  -Wno-bool-operation \
                  -Wno-char-subscripts \
                  -Wno-deprecated-declarations \
                  -Wno-format \
                  -Wno-format-zero-length \
                  -Wno-implicit-function-declaration \
                  -Wno-incompatible-pointer-types \
                  -Wno-parentheses \
                  -Wno-pointer-sign \
                  -Wno-switch \
                  -Wno-unused-const-variable \
                  -Wno-unused-function \
                  -Wno-unused-variable \
                  -Wpointer-arith \
                  -Wredundant-decls \
                  -Wstrict-prototypes \
                  -Wtype-limits \
                  -Wundef \
                  -Wwrite-strings \
                  -fno-math-errno \
                  -fno-signed-zeros \
                  -fomit-frame-pointer

    if ($c.target.class == 'macos')
    {
      c.coptions += -mdynamic-no-pic
      c.loptions += -Wl,-dynamic,-search_paths_first
    }
    elif ($c.target.class != 'windows')
    {
      c.loptions += -Wl,-Bsymbolic
    }

    switch $c.id: path.match
    {
      case '*clang*'
      {
        c.coptions += -Qunused-arguments \
                      -Werror=partial-availability \
                      -Wno-deprecated-pragma \
                      -Wno-implicit-const-int-float-conversion \
                      -Wno-shift-op-parentheses \
                      -Wno-tautological-compare \
                      -mstack-alignment=16
      }
      case 'gcc'
      {
        c.coptions += -Wno-maybe-uninitialized
      }
    }
  }
}
